{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["SongList","this","props","songs","map","song","class","key","title","className","onClick","selectSong","renderList","Component","connect","state","type","payload","clickedSong","selectedSong","src","url","alt","artist","album","duration","App","combineReducers","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","reducers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecdfb145.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <>\n          <li class=\"list-group-item bg-primary text-white\" key={song.title}>\n            <button\n              className=\"btn btn-outline-danger btn-block text-uppercase\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              {song.title}\n            </button>\n          </li>\n        </>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n          <ul class=\"list-group text-center\">{this.renderList()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { songs: state.songs };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectSong }\n)(SongList);\n","// action creator \nexport const selectSong = song => {\n  // return an action\n  return {\n    type: \"SONG_SELECTED\",\n    payload: song\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n\nconst SongDetail = ({clickedSong})=>{\n  if (!clickedSong) return <div className=\"display-4 text-center alert alert-dismissible alert-success\"><strong className=\"display-4 text-info text-center\">\"Please Select a Song\"</strong></div>;\n\n  return (\n    <div className=\"card\">\n    <img className=\"card-img-top fade-in\" src={clickedSong.url} alt={clickedSong.url} />\n    <div className=\"card-body mb-2\">\n          <ul class=\"list-group\">\n          <li class=\"list-group-item bg-info text-white\">\n            <h3>{clickedSong.title}</h3>\n            </li>\n            <li class=\"list-group-item\">\n            <h4><b className=\"text-uppercase text-primary\">ARTIST: </b>\n              {clickedSong.artist}</h4>\n            </li>\n            <li class=\"list-group-item\">\n            <h4><b className=\"text-uppercase text-primary\">Album: </b>\n              {clickedSong.album}</h4>\n            </li>\n            <li class=\"list-group-item\">\n            <h4><b className=\"text-uppercase text-primary\">Duration: </b>\n              {clickedSong.duration}</h4>\n            </li>\n    </ul>\n    </div>\n    </div>\n\n);\n\n\n\n\n\n};\nconst mapStateToProps = state => {\n  return { clickedSong: state.selectedSong };\n};\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\n\nconst App = () => {\n  return (\n    <div className=\"container bg-primary\">\n    <div className=\"card text-white bg-primary border-bottom mb-2 mt-2\">\n  <div className=\"card-body\">\n    <h4 className=\"card-title\">My 90's Favorite Songs List</h4>\n    <p className=\"card-text\">Powered with React & Redux by Alvison Hunter</p>\n  </div>\n</div>\n\n\n\n  <div className=\"row\">\n  <div className=\"col-xm-3 col-sm-3 col-lg-4 col-xl-4 mb-1\">\n <SongList />\n    </div>\n    <div className=\"col-xm-9 col-sm-9 col-lg-8 col-xl-8 mb-1\">\n <SongDetail />\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\n\nconst songsReducer = () => {\n  return [\n    { title: \"Doomsday Clock\", album:\"Zeitgeist\", artist: \"The Smashing Pumpkins\", duration: \"3:45\", url:\"https://coverartarchive.org/release/fec5638d-18f1-34da-b629-35f01a1e1f17/7222113620-500.jpg\" },\n    { title: \"Drive\", album:\"Make Yourself\", artist: \"Incubus\", duration: \"3:54\" , url:\"https://coverartarchive.org/release-group/387aca0c-d34a-3d0c-b7e4-c1b0f73e2dae/front-500.jpg\" },\n    { title: \"You Oughta Know\", album:\"Jagged Little Pill\", artist: \"Alanis Morissette\", duration: \"4:09\" , url:\"https://coverartarchive.org/release-group/ee3d18ed-d6a8-37c7-a964-41bbdb6d59f1/front-500.jpg\" },\n    { title: \"The World I Know\", album:\"Blue\", artist: \"Collective Soul\", duration: \"4:19\" , url:\"https://coverartarchive.org/release/9017e412-1c03-47a5-9ad5-6eb758361b2e/20546202482-500.jpg\" },\n    { title: \"Butterfly\", album:\"The Gift of Game\", artist: \"Crazytown\",duration: \"3:37\" , url:\"https://coverartarchive.org/release-group/db47b821-bded-36cc-977c-514e6ecc2618/front-500.jpg\" },\n    { title: \"In the End\", album:\"Hybrid Theory: Live Around the World\", artist: \"Linkin Park\", duration: \"3:30\" , url:\"https://coverartarchive.org/release-group/7fa56d89-60ee-48eb-868c-5ac068ac09be/front-500.jpg\" },\n    { title: \"Loser\", album:\"Mellow Gold\", artist: \"Beck\", duration: \"3:58\" , url:\"https://coverartarchive.org/release-group/9439429f-1c78-3cf5-99cb-d1b86ed6ff02/front-500.jpg\" },\n    { title: \"Slaughterhouse\", album:\"Goo Goo Dolls\", artist: \"Goo Goo Dolls\", duration: \"3:38\" , url:\"https://coverartarchive.org/release-group/fa9811d8-e884-393e-a740-73b54f300c23/front-500.jpg\" },\n    { title: \"Don't Speak\", album:\"Tragic Kingdom\", artist: \"No Doubt\", duration: \"4:25\" , url:\"https://coverartarchive.org/release-group/44920790-1478-3368-bc98-8cb53f7b3e0f/front-500.jpg\" },\n    { title: \"My Sacrifice\", album:\"Weathered\", artist: \"Creed\", duration: \"4:57\" , url:\"https://coverartarchive.org/release-group/c25a923a-04a9-3ca2-a551-ed0578907999/front-500.jpg\" },\n    { title: \"Pretty Fly (For a White Guy)\", album:\"Americana\", artist: \"The Offspring\",duration: \"3:10\" , url:\"https://coverartarchive.org/release-group/fb43ac3a-8d28-3686-8653-bbf15a5e4389/front-500.jpg\" },\n    { title: \"Smells Like Teen Spirit\", album:\"Nevermind\", artist: \"Nirvana\", duration: \"5:01\", url:\"https://coverartarchive.org/release/b52a8f31-b5ab-34e9-92f4-f5b7110220f0/7400041214-500.jpg\" },\n    { title: \"Scar Tissue\", album:\"Californication\", artist: \"Red Hot Chili Peppers\",duration: \"3:36\" , url:\"https://coverartarchive.org/release-group/ca5dfcc3-83fb-3eee-9061-c27296b77b2c/front-500.jpg\" }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\nsongs: songsReducer,\nselectedSong: selectedSongReducer\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}