{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","aria-hidden","renderList","Component","connect","state","type","payload","clickedSong","selectedSong","class","role","src","url","alt","artist","album","duration","audio","preload","controls","autoplay","App","combineReducers","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","reducers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9c82cf6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <>\n        <div className=\"col-xl-4 col-lg-6 col-sm-6 col-12 mb-2\">\n\n            <button key={song.title}\n              className=\"btn btn-danger btn-block text-uppercase text-left\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              <i className=\"fa fa-play\" aria-hidden=\"true\"></i> &nbsp; {song.title}\n            </button>\n          </div>\n          \n        </>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { songs: state.songs };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectSong }\n)(SongList);\n","// action creator \nexport const selectSong = song => {\n  // return an action\n  return {\n    type: \"SONG_SELECTED\",\n    payload: song\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n\nconst SongDetail = ({clickedSong})=>{\n  if (!clickedSong) return <div className=\"display-4 text-center alert alert-dismissible alert-danger\"><strong className=\"display-4 text-primary text-center\">Please Select a Song</strong></div>;\n\n  return (\n    <div className=\"card\">\n         <div class=\"card-header text-danger\">\n              <div className=\"d-flex align-items-center mt-2\">\n                  <h4 className=\"text-info text-uppercase\">Currently playing {clickedSong.title} </h4>\n                  <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n              </div>\n        </div>\n\n    \n \n    <div className=\"card-body mb-2\">\n    <div className=\"row\">\n      <div className=\"col-xl-6\"><img className=\"card-img-top fade-in\" src={clickedSong.url} alt={clickedSong.url} /></div>\n      <div className=\"col-xl-6\">          <ul class=\"list-group\">\n      <li class=\"list-group-item text-white bg-success\">\n          <h1><b className=\"text-uppercase text-primary\">TRACK INFORMATION</b></h1>\n            </li>\n\n          <li class=\"list-group-item text-white\">\n          <h2><b className=\"text-uppercase text-primary\">ARTIST</b></h2>\n            </li>\n            <li class=\"list-group-item text-white\"><h4 className=\"text-uppercase text-muted\">{clickedSong.artist}</h4></li>\n\n            <li class=\"list-group-item\">\n            <h2><b className=\"text-uppercase text-primary\">Album</b></h2>\n            </li>\n\n            <li class=\"list-group-item text-white\"><h4 className=\"text-uppercase text-muted\">{clickedSong.album}</h4></li>\n\n\n            <li class=\"list-group-item\">\n            <h2><b className=\"text-uppercase text-primary\">Track Duration</b>\n              </h2>\n            </li>\n\n            <li class=\"list-group-item text-white\"><h4 className=\"text-uppercase text-muted\">{clickedSong.duration} Minutes</h4></li>\n\n            <li class=\"list-group-item\">\n            <audio src={clickedSong.audio} preload controls autoplay=\"autoplay\" />\n            </li>      \n    </ul>\n    </div>\n    </div>\n    \n\n    </div>\n    </div>\n\n);\n\n\n\n\n\n};\nconst mapStateToProps = state => {\n  return { clickedSong: state.selectedSong };\n};\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\n\nconst App = () => {\n  return (\n  <div className=\"container\">\n            <div className=\"card text-white bg-primary border-primary mb-2 mt-2\">\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">My 90's Favorite Songs List</h4>\n                    <p className=\"card-text\">Powered with React & Redux by Alvison Hunter</p>\n                  </div>\n            </div>\n\n\n\n          <div className=\"row\">\n                  <div className=\"col-12 col-lg-12 col-xl-12 mb-1\">\n                    <SongList />\n                  </div>\n          </div>\n          <div className=\"row\">\n              <div className=\"col-12 col-lg-12 col-xl-12 mb-1\">\n              <SongDetail />\n              </div>\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst songsReducer = () => {\n  return [\n    {\n      title: \"Cherry Lips (Go Baby Go)\",\n      album: \"Beautiful Garbage\",\n      artist: \"Garbage\",\n      duration: \"3:45\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Garbage/Garbage%20'Cherry%20Lips%20(Go%20Baby%20Go)'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/bf682e09-a800-3064-bbcc-6cebdf073cdc/front.jpg\"\n    },\n    {\n      title: \"Ordinary World\",\n      album: \"Beautiful Garbage\",\n      artist: \"Duran Duran\",\n      duration: \"4:42\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Duran%20Duran/Duran%20Duran%20'Ordinary%20World'.mp3\",\n      url:\n        \"https://coverartarchive.org/release/b036c809-9e60-3bd2-ad52-41c6d07ccb96/2981106404-500.jpg\"\n    },\n    {\n      title: \"Wonderwall\",\n      album: \"(What's the Story) Morning Glory?\",\n      artist: \"Oasis\",\n      duration: \"4:17\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Oasis/Oasis%20'Wonderwall'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/cc7e6348-cc55-31fa-aeb2-748a46a81cb3/front-500.jpg\"\n    },\n    {\n      title: \"Drive\",\n      album: \"Make Yourself\",\n      artist: \"Incubus\",\n      duration: \"3:52\",\n      audio:\n        \"https://www.sinj.com/sounds/mp3s/Rock/Incubus/Incubus%20-%20Drive%20(1).mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/387aca0c-d34a-3d0c-b7e4-c1b0f73e2dae/front-500.jpg\"\n    },\n    {\n      title: \"High and Dry\",\n      album: \"The Bends\",\n      artist: \"Radiohead\",\n      duration: \"4:17\",\n      audio:\n        \"https://www.sinj.com/sounds/mp3s/Rock/(6)%20Radiohead%20-%20High%20And%20Dry.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/b8048f24-c026-3398-b23a-b5e50716cbc7/front.jpg\"\n    },\n    {\n      title: \"Bullet With Butterfly Wings\",\n      album: \"Mellon Collie and the Infinite Sadness \",\n      artist: \"The Smashing Pumpkins\",\n      duration: \"4:17\",\n      audio:\n        \"https://www.sinj.com/sounds/mp3s/Rock/Smashing%20Pumpkins%20-%20Bullet%20With%20Butterfly%20Wings.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/1af599c9-0b44-3a5a-a06b-39e8db6b2b4e/front-500.jpg\"\n    },\n    {\n      title: \"Chop Suey!\",\n      album: \"Toxicity\",\n      artist: \"System of a Down\",\n      duration: \"3:30\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/System%20Of%20A%20Down/System%20Of%20A%20Down%20'Chop%20Suey'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/9cb50ffe-c5cf-338d-8833-f5fc5572f45f/front-500.jpg\"\n    },\n    {\n      title: \"Blurry\",\n      album: \"Come Clean\",\n      artist: \"Puddle of Mudd\",\n      duration: \"3:30\",\n      audio:\n        \"https://www.sinj.com/sounds/mp3s/Rock/Puddle%20of%20Mudd/Puddle%20of%20Mud%20-%20Blurry.MP3\",\n      url:\n        \"https://coverartarchive.org/release-group/7fa56d89-60ee-48eb-868c-5ac068ac09be/front-500.jpg\"\n    },\n    {\n      title: \"Que Onda Guero?\",\n      album: \"Mellow Gold\",\n      artist: \"Beck\",\n      duration: \"3:29\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Beck/Beck%20'Que%20Onda%20Guero'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/e49e2f8a-94c0-3dcf-8ce6-9bc52a1a7867/front-500.jpg\"\n    },\n    {\n      title: \"Animal Instinct\",\n      album: \"Bury the Hatchet\",\n      artist: \"The Cranberries\",\n      duration: \"3:31\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Cranberries/Cranberries%20'Animal%20Instinct'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/97e9c8bf-711c-32df-971d-2ad1a2d7036f/front-500.jpg\"\n    },\n    {\n      title: \"Don't Speak\",\n      album: \"Tragic Kingdom\",\n      artist: \"No Doubt\",\n      duration: \"4:25\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/No%20Doubt/10-Don't%20Speak.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/44920790-1478-3368-bc98-8cb53f7b3e0f/front-500.jpg\"\n    },\n    {\n      title: \"Black Hole Sun\",\n      album: \"Superunknown\",\n      artist: \"Soundgarden\",\n      duration: \"5:17\",\n      audio:\n        \"https://www.sinj.com/sounds/mp3s/Rock/Soundgarden%20-%20Black%20Hole%20Sun.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/8300fe9c-0022-3c55-8a3e-8dc61f282e8c/front-500.jpg\"\n    },\n    {\n      title: \"Pretty Fly (For a White Guy)\",\n      album: \"Americana\",\n      artist: \"The Offspring\",\n      duration: \"3:08\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Offspring/Offspring%20'Pretty%20Fly'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/fb43ac3a-8d28-3686-8653-bbf15a5e4389/front-500.jpg\"\n    },\n    {\n      title: \"Smells Like Teen Spirit\",\n      album: \"Nevermind\",\n      artist: \"Nirvana\",\n      duration: \"5:01\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Nirvana/Nirvana%20'Smells%20Like%20Teen%20Spirit'.mp3\",\n      url:\n        \"https://coverartarchive.org/release/b52a8f31-b5ab-34e9-92f4-f5b7110220f0/7400041214-500.jpg\"\n    },\n    {\n      title: \"Scar Tissue\",\n      album: \"Californication\",\n      artist: \"Red Hot Chili Peppers\",\n      duration: \"3:36\",\n      audio:\n        \"http://hcmaslov.d-real.sci-nnov.ru/public/mp3/Red%20Hot%20Chili%20Peppers/Red%20Hot%20Chili%20Peppers%20'Scar%20Tissue'.mp3\",\n      url:\n        \"https://coverartarchive.org/release-group/ca5dfcc3-83fb-3eee-9061-c27296b77b2c/front-500.jpg\"\n    }\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}